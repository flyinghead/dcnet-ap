#!/bin/sh
# postinst script for dcnet-ap
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# If the package has default file it could be sourced, so that
# the local admin can overwrite the defaults
[ -f "/etc/default/dcnet-ap" ] && . /etc/default/dcnet-ap
# Defaults
[ -z "$AP_DCNET_ADDR" ] && AP_DCNET_ADDR=172.20.0.1
[ -z "$PPP_START_ADDR" ] && PPP_START_ADDR=172.20.0.10
[ -z "$TAP_START_ADDR" ] && TAP_START_ADDR=172.20.0.20

case "$1" in
    configure)
	sed -i -e "s/172\\.20\\.0\\.1:/$AP_DCNET_ADDR:/g" \
		-e "s/172\\.20\\.0\\.10/$PPP_START_ADDR/g" /etc/ppp/options.dcnet
	sed -i -e "s/172\\.20\\.1\\.0/$TAP_START_ADDR/g" /usr/lib/systemd/system/ethtap.service
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# Copied from autogenerated dh_whatever
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
        # This will only remove masks created by d-s-h on package removal.
        deb-systemd-helper unmask 'ethtap.service' >/dev/null || true
        deb-systemd-helper unmask 'discoping.service' >/dev/null || true
        deb-systemd-helper unmask 'iptables-dcnet.service' >/dev/null || true

        # was-enabled defaults to true, so new installations run enable.
        if deb-systemd-helper --quiet was-enabled 'ethtap.service'; then
                # Enables the unit on first installation, creates new
                # symlinks on upgrades if the unit file has changed.
                deb-systemd-helper enable 'ethtap.service' >/dev/null || true
        else
                # Update the statefile to add new symlinks (if any), which need to be
                # cleaned up on purge. Also remove old symlinks.
                deb-systemd-helper update-state 'ethtap.service' >/dev/null || true
        fi
        if deb-systemd-helper --quiet was-enabled 'discoping.service'; then
                deb-systemd-helper enable 'discoping.service' >/dev/null || true
        else
                deb-systemd-helper update-state 'discoping.service' >/dev/null || true
        fi
        if deb-systemd-helper --quiet was-enabled 'pppd.socket'; then
                deb-systemd-helper enable 'pppd.socket' >/dev/null || true
        else
                deb-systemd-helper update-state 'pppd.socket' >/dev/null || true
        fi
        if deb-systemd-helper --quiet was-enabled 'iptables-dcnet.service'; then
                deb-systemd-helper enable 'iptables-dcnet.service' >/dev/null || true
        else
                deb-systemd-helper update-state 'iptables-dcnet.service' >/dev/null || true
        fi

        if [ -d /run/systemd/system ]; then
                systemctl --system daemon-reload >/dev/null || true
                if [ -n "$2" ]; then
                        _dh_action=restart
                else
                        _dh_action=start
                fi
                deb-systemd-invoke $_dh_action 'ethtap.service' >/dev/null || true
                deb-systemd-invoke $_dh_action 'discoping.service' >/dev/null || true
                deb-systemd-invoke $_dh_action 'pppd.socket' >/dev/null || true
                deb-systemd-invoke $_dh_action 'iptables-dcnet.service' >/dev/null || true
        fi
fi
# End copy

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
